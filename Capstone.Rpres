Coursera Capstone Project - SwiftKey
========================================================
author: Lupita Sahu
date: 24/08/2019
autosize: true

Overview
========================================================
This project is created as part Coursera Data Scientist Specialization Capstone project. As part of this project, I have created a word predictor, that predicts the next word once the user enters a phrase.

The algorithm uses NLP to predict the next word using the previous two words by looking up in the corpus to find out the most frequently used phrases.

This app is designed to provide 3 unique words as predictions.

Note: All the code used in this project can be found in [link](https://github.com/SLupita/Coursera-Capstone)

Note: The application may take a while to load. So please wait for it to load completely before entering the text.


The Data
========================================================
The first step in building the app is data collection. For this exercise we used the data set provided by Coursera - [Link]( https://d396qusza40orc.cloudfront.net/dsscapstone/dataset/Coursera-SwiftKey.zip)

This data set contains a sample of news items, blogs and tweets for four languages - English, Finnish, Russian and Dutch. We have considered only English data to build our app.

### Data Cleaning and tokenization

The next step was to clean the data and tokenize them by converting them to N-grams which were used to build our dictionary. 

Note: N-grams are continuous sequence of words. We have used 1-gram, 2-gram and 3-grams for this project.


The algorithm
========================================================

The algorithm has been kept as simple as possible in order to keep the response faster.

After a user enters a phrase, the sequence of events are as follows:
 - The phrase is cleaned to remove profanity and numbers
 - The cleaned phrase is then matched against highest order N-gram table and words from the matched phrases are returned as predicted words.
 - If no match found then search is performed on the next lower order N-gram.
 - If no match found then most frequently used words from the corpus are returned.


The Application
========================================================
- Click on the below link to open the application in a browser
- Enter text in "Enter text" box and click on "Predict" button
- 3 predicted words will appear on the right side under "Predicted words" along with cleansed word, response time and which N-gram was used for prediction.

The application is deployed on the shiny server - [link](https://lsahu.shinyapps.io/Coursera_capstone/)

![image](app.png) 